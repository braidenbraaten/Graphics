#version 330
// locations are the 'attributes' from the vertex
// 'in' brings data from the previous


layout(location = 0)in vec4 position;
layout(location = 1)in vec4 color;

// out sends data to the next step of the pipeline
out vec4 vColor;
//out vec4 dinosours;
out vec4 vPosition;


uniform float time = 0.0;

mat4 rotationMatrix(vec3 axis, float angle)
{
    axis = normalize(axis);
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1.0 - c;
    
    return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,
                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,
                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,
                0.0,                                0.0,                                0.0,                                1.0);
}

void main() 
{
	vColor = color; 
	vPosition = position;
	gl_Position = position * (rotationMatrix(vec3(1,1,1), cos(time)) / 10);
		
	

	//gl_Position.y += cos(time + position.x) / 2;
	//gl_Position.x += sin(time + position.y / 2) / 2;
	gl_Position.w += cos(time / 10 + color.b +gl_Position.w) / 2;
	gl_Position.x -= sin(time/ 10 + position.y / 2) / 2;
	gl_Position.y -= sin(time / 10 + position.x / 2) /2;

}