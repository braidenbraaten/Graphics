#version 430

out vec4 outColor;
in vec4 vNormal;
in vec4 vPosition;
in vec2 UV;

layout(location = 0)uniform mat4 proj;
layout(location = 1)uniform mat4 view;
layout(location = 3)uniform sampler2D diffuseMap;
layout(location = 4)uniform sampler2D specularMap;
layout(location = 5)uniform sampler2D normalMap;

/*
	Ambiant Color
	Diffuse Color
	Specular Color


*/



void main()
{
	vec4 lDir = normalize(vec4(-1,-1,-1,0));
	vec4 camPos = inverse(view)[3];// -view[3] set the w to 0
	float specPower = 8.0f;


	vec4 la = vec4(.2f,.2f,.2f,1.f), 
	     ld = vec4(1,1,1,1),
	     ls = vec4(1,0,1,0); 
	vec4 sa = vec4(.2f,.2f,.2f,1.f),
	     sd = texture(diffuseMap, UV),
	     ss = texture(specularMap, UV);

	vec4 PP = proj * view * vPosition;
	
	
	
		//ss = vec4(1,1,1,1);
		sd = texture(normalMap, UV);	
	
	vec4 R = reflect(lDir,vNormal); //Light Reflection
	vec4 E = normalize(camPos - vPosition);// Eye Direction

	
	float lamb = max(0.0f,-dot(vNormal, lDir));// clamp between 0-1

	float spec = pow(max(0.0f,dot(R,E)), specPower);

	vec4 ambient  = la * sa;
	vec4 diffuse  = ld * lamb * sd;
	vec4 specular = ls * spec * ss;


	outColor = ambient + diffuse + specular;
	
}