#version 430




in vec2 UV;
layout(location = 0)uniform mat4 proj;
layout(location = 1)uniform mat4 view;
layout(location = 2)uniform mat4 model;


layout(location = 3)uniform sampler2D colorMap;
layout(location = 4)uniform sampler2D diffuseColor;
layout(location = 5)uniform sampler2D specularColor;

out vec4 outColor;

uniform vec2 sDim = vec2(1280,720);



vec4 sobelShade(in sampler2D diff, in vec2 uv, in vec2 screenDim);

uniform float time = 0.0;

void main()
{	


outColor = sobelShade(diffuseColor, (vec2(-cos(time), cos(time)) * UV), sDim) - texture(colorMap, UV);


}

vec4 sobelShade(in sampler2D diff, in vec2 uv, in vec2 screenDim)
{
		vec4 yColor =
	texture(diff,uv + vec2( 1, 1)/screenDim)   +
	texture(diff,uv + vec2( 0, 1)/screenDim)*2 +
	texture(diff,uv + vec2(-1, 1)/screenDim)   -
	texture(diff,uv + vec2( 1,-1)/screenDim)   -
	texture(diff,uv + vec2( 0,-1)/screenDim)*2 -
	texture(diff,uv + vec2(-1,-1)/screenDim);


	vec4 xColor =
	texture(diff,uv + vec2(-1,-1)/screenDim)   +
	texture(diff,uv + vec2(-1, 0)/screenDim)*2 +
	texture(diff,uv + vec2(-1, 1)/screenDim)   -
	texture(diff,uv + vec2( 1,-1)/screenDim)   -
	texture(diff,uv + vec2( 1, 0)/screenDim)*2 -
	texture(diff,uv + vec2( 1, 1)/screenDim);

	 vec4 result = sqrt(yColor * yColor + xColor * xColor);
	return result;
}
